# For details of what checks are run for PRs please refer below
name: PHP CI

on:
  push:
    # TODO remove my custom branch
    branches: ["master", "php_ge_73"]
  pull_request:
  workflow_dispatch:
  schedule:
    # schedule weekly tests, since dependencies are not intended to be pinned
    # this means: at 23:42 on Fridays
    - cron: '42 23 * * 5'

jobs:
  tests:
    name: Tests (${{ matrix.os}}, ${{ matrix.php }}, ${{ matrix.stability }})
    runs-on: ${{ matrix.os }}
    env:
      REPORTS_DIR: CI_reports
      REPORTS_ARTIFACT: test-reports
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        php:
          - "7.3" # lowest supported
          - "7.4"
          - "8.0" # highest supported
        stability: ["lowest", "stable"]
    timeout-minutes: 30
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        # see https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom,filter,json,libxml
          coverage: pcov
      - name: dir setup
        run: mkdir ${{ env.REPORTS_DIR }}
      - name: Validate composer.json and composer.lock
        run: >
          php
          ./tools/composer
          validate
          --with-dependencies
          --no-interaction
      - name: Install dependencies
        run: >
          php
          ./tools/composer
          update
          --prefer-${{ matrix.stability }}
          --prefer-dist
          --no-interaction
          --no-progress
          --no-suggest
      - name: Run PHPUnit tests
        run: >
          php
          ./vendor/phpunit/phpunit/phpunit
          --log-junit=${{ env.REPORTS_DIR }}/tests.${{ matrix.os }}_php${{ matrix.php }}_${{ matrix.stability }}.junit.xml
          --coverage-clover=${{ env.REPORTS_DIR }}/coverage.${{ matrix.os}}_php${{ matrix.php }}_${{ matrix.stability }}.clover.xml
          --no-interaction
          --do-not-cache-result
      - name: Artifact reports
        if: ${{ ! cancelled() }}
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPORTS_ARTIFACT }}
          path: ${{ env.REPORTS_DIR }}
          if-no-files-found: error
  type-checker:
    name: Code analysis (php${{ matrix.php }}, ${{ matrix.stability }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      REPORTS_DIR: CI_reports
      REPORTS_ARTIFACT: types-reports
    strategy:
      fail-fast: false
      matrix:
        php: ["7.3", "8.0"] # highest and lowest supported
        stability: ["lowest", "stable"]
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        # see https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
      - name: Install dependencies
        run: >
          php
          ./tools/composer
          update
          --prefer-${{ matrix.stability }}
          --prefer-dist
          --no-interaction
          --no-progress
          --no-suggest
      - name: Run Psalm tests
        run: >
          php
          ./tools/psalm
          --show-info=true
          --no-diff
          --long-progress
          --report=${{ env.REPORTS_DIR }}/psalm.php${{ matrix.php }}_${{ matrix.stability }}.junit.xml
      - name: Artifact reports
        if: ${{ ! cancelled() }}
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPORTS_ARTIFACT }}
          path: ${{ env.REPORTS_DIR }}
          if-no-files-found: error
  style-checker:
    name: Coding Standards
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        # see https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          coverage: none
      - name: Run PHP-CS-Fixer tests
        run: >
          php
          ./tools/php-cs-fixer
          fix
          --dry-run
          --diff-format=udiff
          --using-cache=no
          --show-progress=dots
          --no-interaction
  demo:
    name: Demo (composer${{ matrix.composer }})
    runs-on: ubuntu-latest
    env:
      PLUGIN_DIR: plugin
      DEMO_DIR: demo
      REPORTS_DIR: CI_reports
      REPORTS_ARTIFACT: demo-reports
    strategy:
      fail-fast: false
      matrix:
        composer:
          - 1 # lowest supported
          - 2 # highest supported
    timeout-minutes: 5
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
        with:
          path: ${{ env.PLUGIN_DIR }}
      - name: Setup PHP
        # see https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          # this time we dont use own composer but a switching system wide version.
          tools: composer:v${{ matrix.compser }}
          coverage: none
      - name: dir setup
        run: mkdir -p ${{ env.DEMO_DIR }}/${{ env.REPORTS_DIR }}
      - name: Setup Demo
        run: |
          set -ex

          php \
          -f ${{ env.PLUGIN_DIR }}/tests/plugin/setup.php \
          -- ${{ env.DEMO_DIR }}

          composer \
          install \
          -d${{ env.DEMO_DIR }} \
          --prefer-dist \
          --no-interaction \
          --no-progress \
          --no-suggest
      - name: Demo Help
        run: >
          composer
          make-bom -h
          > ${{ env.REPORTS_DIR }}/help.txt
        working-directory: ${{ env.DEMO_DIR }}
      - name: Demo XML
        run: >
          composer
          make-bom
          --output-file=${{ env.REPORTS_DIR }}/bom.xml
        working-directory: ${{ env.DEMO_DIR }}
      - name: Demo JSON
        run: >
          composer
          make-bom
          --json
          --output-file=${{ env.REPORTS_DIR }}/bom.json
        working-directory: ${{ env.DEMO_DIR }}
      - name: Artifact reports
        if: ${{ ! cancelled() }}
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPORTS_ARTIFACT }}
          path: ${{ env.DEMO_DIR }}/${{ env.REPORTS_DIR }}
          if-no-files-found: error



