# For details of what checks are run for PRs please refer below
# docs: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: PHP CI

on:
  push:
    branches: ["master"]
  pull_request:
  workflow_dispatch:
  schedule:
    # schedule weekly tests, since dependencies are not intended to be pinned
    # this means: at 23:42 on Fridays
    - cron: '42 23 * * 5'

jobs:
  tests:
    name: Tests (${{ matrix.os}}, ${{ matrix.php }}, ${{ matrix.stability }})
    runs-on: ${{ matrix.os }}
    env:
      REPORTS_DIR: CI_reports
      REPORTS_ARTIFACT: tests-reports
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        php:
          - "7.1" # lowest supported
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0" # highest supported
        stability: [ "lowest", "stable" ]
    timeout-minutes: 30

    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        # see https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom,json,xmlwriter
          tools: composer
          coverage: pcov,xdebug
      - name: dir setup
        run: mkdir ${{ env.REPORTS_DIR }}
      - name: Validate composer.json and composer.lock
        run: >
          composer validate
          --no-interaction
      - name: Install dependencies
        run: >
          composer update
          --prefer-${{ matrix.stability }}
          --prefer-dist
          --no-interaction
          --no-progress
          --no-suggest
      - name: Run PHPUnit tests
        run: >
          php
          -d zend.assertions=1
          -d assert.exception=1
          -d display_errors=On
          -d error_reporting=-1
          -d log_errors_max_len=0
          -d memory_limit=-1
          vendor/phpunit/phpunit/phpunit
          --log-junit=${{ env.REPORTS_DIR }}/tests.${{ matrix.os }}_php${{ matrix.php }}_${{ matrix.stability }}.junit.xml
          --coverage-clover=${{ env.REPORTS_DIR }}/coverage.${{ matrix.os}}_php${{ matrix.php }}_${{ matrix.stability }}.clover.xml
      - name: Artifact reports
        if: ${{ ! cancelled() }}
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPORTS_ARTIFACT }}
          path: ${{ env.REPORTS_DIR }}
          if-no-files-found: error
  code-checker:
    name: Code analysis (php${{ matrix.php }}, ${{ matrix.stability }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      REPORTS_DIR: CI_reports
      REPORTS_ARTIFACT: types-reports
    strategy:
      fail-fast: false
      matrix:
        include:
          - # lowest supported
            php: "7.1"
            stability: "lowest"
          - # highest supported
            php: "8.0"
            stability: "stable"
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        # see https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
          coverage: none
      - name: Install psalm
        run: >
          composer install
          -dtools/psalm
          --prefer-dist
          --no-interaction
          --no-progress
          --no-suggest
      - name: Install dependencies
        run: >
          composer update
          --prefer-${{ matrix.stability }}
          --prefer-dist
          --no-interaction
          --no-progress
          --no-suggest
      - name: Run Psalm tests
        run: >
          php tools/psalm/vendor/vimeo/psalm/psalm
          --use-baseline=.psalm/baseline-${{ matrix.stability }}.xml
          --no-diff
          --no-cache
          --long-progress
          --report=${{ env.REPORTS_DIR }}/psalm.php${{ matrix.php }}_${{ matrix.stability }}.junit.xml
      - name: Artifact reports
        if: ${{ ! cancelled() }}
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPORTS_ARTIFACT }}
          path: ${{ env.REPORTS_DIR }}
          if-no-files-found: error
