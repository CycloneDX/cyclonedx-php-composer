# For details of what checks are run for PRs please refer below
# docs: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: PHP CI

on:
  push:
    branches: ["master"]
  pull_request:
  workflow_dispatch:
  schedule:
    # schedule weekly tests, since dependencies are not intended to be pinned
    # this means: at 23:42 on Fridays
    - cron: '42 23 * * 5'

env:
  PHP_PROJECT_EXT: dom,json,xmlwriter
  REPORTS_DIR: CI_reports

jobs:
  tests:
    name: Tests (${{ matrix.os}}, ${{ matrix.php }}, ${{ matrix.composer}}, ${{ matrix.dependencies }})
    runs-on: ${{ matrix.os }}
    env:
      REPORTS_ARTIFACT: tests-reports
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]
        php:
          - "8.0" # highest supported
          - "7.4"
          - "7.3"
          - "7.2"
          - "7.1" # lowest supported
        dependencies: [ "lowest", "highest" ]
        composer: [ 2 ]
        include:
          - # windows cutting edge highest
            os: windows-latest
            php: "8.0"
            dependencies: "highest"
            composer: 2
          - # macos cutting edge highest
            os: macos-latest
            php: "8.0"
            dependencies: "highest"
            composer: 2
    timeout-minutes: 30
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        # see https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_PROJECT_EXT }}
          tools: composer:v${{ matrix.composer }}
          coverage: pcov,xdebug
      - name: Determine composer cache directory on Linux/macOS
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV
      - name: Determine composer cache directory on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: ECHO "COMPOSER_CACHE_DIR=~\AppData\Local\Composer" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Cache dependencies installed with composer
        # see https://github.com/actions/cache
        uses: actions/cache@v2.1.4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key:          php${{ matrix.php }}-composerV${{ matrix.composer }}-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: php${{ matrix.php }}-composerV${{ matrix.composer }}-${{ matrix.dependencies }}-
      - name: dir setup
        run: mkdir ${{ env.REPORTS_DIR }}
      - name: Validate composer.json and composer.lock
        run: >
          composer validate
          --no-interaction
      - name: Install lowest dependencies
        if: ${{ matrix.dependencies == 'lowest' }}
        run: composer update --prefer-dist --no-interaction --no-progress --prefer-lowest
      - name: Install highest dependencies
        if: ${{ matrix.dependencies == 'highest' }}
        run: composer update --prefer-dist --no-interaction --no-progress
      - name: Run PHPUnit tests
        run: >
          php
          -d zend.assertions=1
          -d assert.exception=1
          -d display_errors=On
          -d error_reporting=-1
          -d log_errors_max_len=0
          -d memory_limit=-1
          vendor/phpunit/phpunit/phpunit
          --log-junit=${{ env.REPORTS_DIR }}/tests.${{ matrix.os }}_php${{ matrix.php }}_composer${{ matrix.composer }}_${{ matrix.dependencies }}.junit.xml
          --coverage-clover=${{ env.REPORTS_DIR }}/coverage.${{ matrix.os}}_php${{ matrix.php }}_composer${{ matrix.composer }}_${{ matrix.dependencies }}.clover.xml
      - name: Artifact reports
        if: ${{ ! cancelled() }}
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPORTS_ARTIFACT }}
          path: ${{ env.REPORTS_DIR }}
          if-no-files-found: error
  code-checker:
    name: Code analysis (${{ matrix.php }}, ${{ matrix.composer }}, ${{ matrix.dependencies }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      REPORTS_ARTIFACT: types-reports
    strategy:
      fail-fast: false
      matrix:
        include:
          - # lowest supported
            php: "7.1"
            composer: 1
            dependencies: "lowest"
          - # highest supported
            php: "8.0"
            composer: 2
            dependencies: "highest"
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        # see https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_PROJECT_EXT }}
          tools: composer:v${{ matrix.composer }}
          coverage: none
      - name: Determine composer cache directory
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV
      - name: Cache dependencies installed with composer
        # see https://github.com/actions/cache
        uses: actions/cache@v2.1.4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key:          php${{ matrix.php }}-composer${{ matrix.composer }}-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: php${{ matrix.php }}-composer${{ matrix.composer }}-${{ matrix.dependencies }}-
      - name: Install psalm
        run: composer install --prefer-dist --no-interaction --no-progress
        working-directory: tools/psalm
      - name: Install lowest dependencies
        if: ${{ matrix.dependencies == 'lowest' }}
        run: composer update --prefer-dist --no-interaction --no-progress --prefer-lowest
      - name: Install highest dependencies
        if: ${{ matrix.dependencies == 'highest' }}
        run: composer update --prefer-dist --no-interaction --no-progress
      - name: Run Psalm tests
        run: >
          php tools/psalm/vendor/vimeo/psalm/psalm
          --use-baseline=.psalm/baseline-${{ matrix.dependencies }}.xml
          --no-diff
          --no-cache
          --long-progress
          --report=${{ env.REPORTS_DIR }}/psalm.php${{ matrix.php }}_composer${{ matrix.composer }}_${{ matrix.dependencies }}.junit.xml
      - name: Artifact reports
        if: ${{ ! cancelled() }}
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPORTS_ARTIFACT }}
          path: ${{ env.REPORTS_DIR }}
          if-no-files-found: error
  composer-unused:
    name: CompoerUnused
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        # see https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          extensions: ${{ env.PHP_PROJECT_EXT }}
          tools: composer:v2
          coverage: none
      - name: Determine composer cache directory
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV
      - name: Cache dependencies installed with composer
        # see https://github.com/actions/cache
        uses: actions/cache@v2.1.4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key:          php8.0-composer2-highest-${{ hashFiles('**/composer.json') }}
          restore-keys: php8.0-composer2-highest-
      - name: Install composer-unused
        run: composer install --prefer-dist --no-interaction --no-progress
        working-directory: tools/composer-unused
      - name: Run composer-unused tests
        run: >
          php tools/composer-unused/vendor/icanhazstring/composer-unused/bin/composer-unused
          --no-progress
          --no-interaction
          --excludeDir=tools
  composer-require-checker:
    name: CompoerRequireChecker
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        # see https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          extensions: ${{ env.PHP_PROJECT_EXT }}
          tools: composer:2
          coverage: none
      - name: Determine composer cache directory
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV
      - name: Cache dependencies installed with composer
        # see https://github.com/actions/cache
        uses: actions/cache@v2.1.4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key:          php8.0-composer2-highest-${{ hashFiles('**/composer.json') }}
          restore-keys: php8.0-composer2-highest-
      - name: Install composer-require-checker
        run: composer install --prefer-dist --no-interaction --no-progress
        working-directory: tools/composer-require-checker
      - name: Install dependencies
        run: composer update --no-dev --prefer-dist --no-interaction --no-progress
      - name: Run composer-require-checker tests
        run: >
          php tools/composer-require-checker/vendor/maglnet/composer-require-checker/bin/composer-require-checker
          --no-interaction
  coding-standards:
    name: Coding Standards
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        # see https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          extensions: ${{ env.PHP_PROJECT_EXT }}
          tools: composer:2
          coverage: none
      - name: Determine composer cache directory
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV
      - name: Cache dependencies installed with composer
        # see https://github.com/actions/cache
        uses: actions/cache@v2.1.4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key:          php8.0-composer2-highest-${{ hashFiles('**/composer.json') }}
          restore-keys: php8.0-composer2-highest-
      - name: Install PHP-CS-Fixer
        run: composer install --prefer-dist --no-interaction --no-progress
        working-directory: tools/php-cs-fixer
      - name: Run PHP-CS-Fixer tests
        run: >
          php tools/php-cs-fixer/vendor/friendsofphp/php-cs-fixer/php-cs-fixer
          fix
          --dry-run
          --diff-format=udiff
          --using-cache=no
          --show-progress=dots
          --no-interaction
  demo:
    name: Demo
    env:
      REPORTS_ARTIFACT: demo-output
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: demo/project
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        # see https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          extensions: ${{ env.PHP_PROJECT_EXT }}
          tools: composer:v2
          coverage: none
      - name: Determine composer cache directory
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV
      - name: Cache dependencies installed with composer
        # see https://github.com/actions/cache
        uses: actions/cache@v2.1.4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key:          php8.0-composer2-highest-${{ hashFiles('**/composer.json') }}
          restore-keys: php8.0-composer2-highest-
      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction --no-progress
      - name: dir setup
        run: mkdir ${{ env.REPORTS_DIR }}
      - name: Show help
        run: >
          composer make-bom
          --help
          > ${{ env.REPORTS_DIR }}/help.txt
      - name: Make XML SBOM
        run: >
          composer make-bom
          -vvv
          --exclude-dev
          --output-file=${{ env.REPORTS_DIR }}/bom.xml
      - name: Make JSON SBOM
        run: >
          composer make-bom
          -vvv
          --exclude-dev
          --output-file=${{ env.REPORTS_DIR }}/bom.json
          --json
      - name: Artifact reports
        if: ${{ ! cancelled() }}
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPORTS_ARTIFACT }}
          path: demo/project/${{ env.REPORTS_DIR }}
          if-no-files-found: error
