{
    "name": "cyclonedx/cyclonedx-php-composer",
    "description": "Creates CycloneDX Software Bill-of-Materials (SBOM) from PHP Composer projects",
    "license": "Apache-2.0",
    "type": "composer-plugin",
    "keywords": [
        "CycloneDX",
        "SBOM",
        "software-bill-of-materials",
        "BOM",
        "bill-of-materials",
        "package-url",
        "PURL"
    ],
    "authors": [
        {
            "name": "nscuro",
            "email": "nscuro@protonmail.com",
            "role": "Developer"
        },
        {
            "name": "Jan Kowalleck",
            "email": "jan.kowalleck@gmail.com",
            "role": "Developer"
        }
    ],
    "homepage": "https://github.com/CycloneDX/cyclonedx-php-composer/#readme",
    "support": {
        "issues": "https://github.com/CycloneDX/cyclonedx-php-composer/issues",
        "source": "https://github.com/CycloneDX/cyclonedx-php-composer/"
    },
    "require": {
        "php": "^7.3 || ^8.0",
        "composer-plugin-api": "^2.0",
        "cyclonedx/cyclonedx-library": "^1.4.2",
        "package-url/packageurl-php": "^1.0"
    },
    "require-dev": {
        "composer/composer": "^2.0.0",
        "phpunit/phpunit": "9.5.28",
        "roave/security-advisories": "dev-latest"
    },
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "CycloneDX\\Composer\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "CycloneDX\\Tests\\": "tests/"
        }
    },
    "config": {
        "allow-plugins": {
            "ergebnis/composer-normalize": true,
            "icanhazstring/composer-unused": true
        },
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "branch-alias": {
            "dev-master": "3.x-dev"
        },
        "class": "CycloneDX\\Composer\\Plugin",
        "composer-normalize": {
            "indent-size": 4,
            "indent-style": "space"
        }
    },
    "scripts": {
        "cs-fix": "@php tools/php-cs-fixer/vendor/friendsofphp/php-cs-fixer/php-cs-fixer fix --diff",
        "dev-setup": [
            "@composer -dtools/composer-normalize update",
            "@composer -dtools/composer-require-checker update",
            "@composer -dtools/composer-unused update",
            "@composer -dtools/php-cs-fixer update",
            "@composer -dtools/psalm update",
            "@composer update"
        ],
        "normalize": "@composer -dtools/composer-normalize normalize --diff $PWD/composer.json",
        "test": [
            "@composer validate",
            "@test:psalm",
            "@test:phpunit",
            "@test:cs-fixer",
            "@test:composer-unused",
            "@test:composer-require-checker",
            "@test:composer-normalize"
        ],
        "test:composer-normalize": "@composer -dtools/composer-normalize normalize --dry-run --diff $PWD/composer.json",
        "test:composer-require-checker": "@php tools/composer-require-checker/vendor/maglnet/composer-require-checker/bin/composer-require-checker || :",
        "test:composer-unused": "@php tools/composer-unused/vendor/icanhazstring/composer-unused/bin/composer-unused --excludeDir=tools",
        "test:cs-fixer": "@php tools/php-cs-fixer/vendor/friendsofphp/php-cs-fixer/php-cs-fixer fix --dry-run --diff",
        "test:phpunit": "@php -d zend.assertions=1 -d assert.exception=1 -d display_errors=On -d error_reporting=-1 -d log_errors_max_len=0 -d memory_limit=-1 vendor/phpunit/phpunit/phpunit",
        "test:psalm": "@php tools/psalm/vendor/vimeo/psalm/psalm"
    },
    "scripts-descriptions": {
        "cs-fix": "Fix files according to coding standards.",
        "dev-setup": "Install dev-requirements and tools.",
        "normalize": "Normalize composer.json",
        "test": "Run all tests!",
        "test:composer-normalize": "Test if composer.json was normalized",
        "test:composer-require-checker": "Test compoer requirements with composer-require-checker.",
        "test:composer-unused": "Test compoer requirements with composer-unused.",
        "test:cs-fixer": "Test coding standards with PHP-CS-fixer.",
        "test:phpunit": "Run tests with PHPUnit.",
        "test:psalm": "Run static code analysis with Psalm."
    }
}
